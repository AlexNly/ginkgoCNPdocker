#!/bin/bash

DIR_ROOT="/var/www/html/ginkgo"

dir=$1
inFile=$2
statFile=$3 
doStep1=$4
doStep2=$5
doStep3=$6
binMeth=$7
segMeth=$8
clustMeth=$9
distMet=${10}

total=`wc -l < ${dir}/${inFile}`

## Step 1: Binning
echo "Binning...";
if (( doStep1 == 1 )); then
  cnt=0;
  while read file; do
    ./status ${dir}/${statFile} 1 $file $cnt $total  
	## Skip this step if file exists (e.g. if user selects a different set of files, only need to re-run paste command below)
	if [ ! -f ${dir}/${file}_mapped ]; then
	    ./bin_unsorted $DIR_ROOT/bins_${binMeth} `wc -l < $DIR_ROOT/bins_${binMeth}` ${dir}/${file} `echo ${file} | awk -F "." '{print $1}'` ${dir}/${file}_mapped
	fi
    cnt=$(($cnt+1));
  done < ${dir}/${inFile}

  paste bins_${binMeth} ${dir}/*_mapped > ${dir}/data
  ./status ${dir}/${statFile} 1 done $cnt $total
fi

## Step 2: Cluster
echo "finish.r"
if (( doStep2 == 1 )); then
  ./status ${dir}/${statFile} 2 initializing 0 1
  rm ${dir}/*jpeg ${dir}/hist.newick ${dir}/SegFile -f
  ./finish.R $DIR_ROOT ${dir} ${statFile} data ${binMeth} ${segMeth} ${clustMeth} ${distMet}
fi


## Step 3: Recompute histogram
echo "fix.r"
if (( doStep3 == 1 )); then
  ./status ${dir}/${statFile} 4 recomputing_histogram 0 1
  ./fix.R $DIR_ROOT ${dir} ${statFile} ${dir}/SegFile ${clustMeth} ${distMet}
fi

